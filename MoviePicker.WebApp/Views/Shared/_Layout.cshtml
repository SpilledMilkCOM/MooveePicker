@using MoviePicker.WebApp.Models
@using MoviePicker.WebApp.Utilities

@{
	var userRequestKeys = new List<string>() { "wl", "bo" };
}

<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<!-- Since there is no reference to a Model, the ViewBag is needed to send values to this view wrapper. -->

	@if (ViewBag.TwitterCard != null)
	{
		<meta name="twitter:card" content="@ViewBag.TwitterCard" />
		<meta name="twitter:site" content="@ViewBag.TwitterId" />
		<meta name="twitter:creator" content="@ViewBag.TwitterCreatorId" />
		<meta name="twitter:title" content="@ViewBag.TwitterTitle" />
		<meta name="twitter:description" content="@ViewBag.TwitterDescription" />
		<meta name="twitter:image" content="@ViewBag.TwitterImage" />
		<meta name="twitter:image:alt" content="@ViewBag.TwitterImageAlt" />

		<meta property="og:title" content="@ViewBag.TwitterTitle" />
		<meta property="og:description" content="@ViewBag.TwitterDescription" />
		<meta property="og:image" content="@ViewBag.TwitterImage" />
		<meta property="og:image:alt" content="@ViewBag.TwitterImageAlt" />
		<meta property="og:site_name" content="@ViewBag.OpenGraphSiteName" />
		<meta property="og:url" content="@ViewBag.OpenGraphUrl">
	}

	<title>@ViewBag.Title - @Constants.APPLICATION_NAME</title>

	@Styles.Render("~/Content/css")
	@Scripts.Render("~/bundles/modernizr")

	@*----==== For Twitter emoji support ====----*@
	<script src="//twemoji.maxcdn.com/twemoji.min.js"></script>

	@*----==== For Google charts support ====----*@
	<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

	<link rel="icon" type="image/png" href="@Constants.WEBSITE_URL/images/favicon.png">

	<link rel="apple-touch-icon" href="@Constants.WEBSITE_URL/images/Moovee Picker Cow64x64.png">
	<link rel="apple-touch-icon" sizes="60x60" href="@Constants.WEBSITE_URL/images/Moovee Picker Cow64x64.png">
	<link rel="apple-touch-icon" sizes="114x114" href="@Constants.WEBSITE_URL/images/Moovee Picker Cow128x128.png">
	<link rel="apple-touch-icon" sizes="144x144" href="@Constants.WEBSITE_URL/images/Moovee Picker Cow128x128.png">

</head>

<body>
	<nav class="navbar navbar-expand-sm navbar-dark bg-dark">

		@*Do NOT use @Html.Action() or you WILL get a "stack overflow" error*@

		<a class="navbar-brand" href="~/Home">
			<span>
				<img src="~/Images/Moovee Picker Cow32x32.png" alt="Moovee Picker Logo" style="height: 2em;" />
				&nbsp;&nbsp;@Constants.APPLICATION_NAME
			</span>
		</a>

		@*
			For WHATEVER reason the JS was not running for "collapse"
			When using this method I don't believe that I need any of the other data attributes.
		*@

		<button class="navbar-toggler" type="button" onclick="$('.collapse').collapse()"
				data-toggle="collapse" data-target="#mainNavBar"
				aria-controls="mainNavBar" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>

		<div class="navbar-collapse collapse" id="mainNavBar">
			<ul class="navbar-nav ml-auto">
				<li class="nav-item">
					@Html.ActionLink("Home", "Index", "Home", ViewUtility.RequestParamsToDynamic(Request)
						, new { @class = string.Format("nav-link{0}", ViewBag.Title == "Home" ? " active" : string.Empty) })
				</li>
				<li class="nav-item">
					@Html.ActionLink("Help", "About", "LowMem", protocol: null, hostName: null, fragment: "help", routeValues: ViewUtility.RequestParamsToDynamic(Request)
							, htmlAttributes: new { @class = string.Format("nav-link{0}", ViewBag.Title == "Help" ? " active" : string.Empty) })
				</li>
				<li class="nav-item">
					@Html.ActionLink("About", "About", "LowMem", ViewUtility.RequestParamsToDynamic(Request)
							, new { @class = string.Format("nav-link{0}", ViewBag.Title == "About" ? " active" : string.Empty) })
				</li>
				<li class="nav-item">
					@Html.ActionLink("Donate", "Donate", "LowMem", ViewUtility.RequestParamsToDynamic(Request)
							, new { @class = string.Format("nav-link{0}", ViewBag.Title == "Donate" ? " active" : string.Empty) })
				</li>
			</ul>
		</div>
	</nav>

	<div class="container-fluid body-content">
		@RenderBody()
		<hr />
		<footer>
			<div class="row">
				<div class="col-xs-6 col-sm-3">
					&copy; 2017-@DateTime.Now.Year - <a href="http://SpilledMilk.com" target="_blank">@Constants.COMPANY_NAME</a>
				</div>

				<div class="col-xs-6 col-sm-1">
					ver:&nbsp;<a href="https://github.com/SpilledMilkCOM/MooveePicker/commits/master" target="_blank">@ViewUtility.Version()</a>
				</div>

				<div class="col-xs-6 col-sm-3 col-sm-offset-2">
					<a href="https://twitter.com/SpilledMilkCOM" class="twitter-follow-button" data-show-count="true">Follow @@SpilledMilkCOM</a>
				</div>

				<div class="col-sm-2 col-sm-offset-1">
					@if (string.IsNullOrEmpty(ViewBag.TwitterTweetText))
					{
						<a class="twitter-share-button" href="https://twitter.com/intent/tweet">Tweet</a>
					}
					else
					{
						<a class="twitter-share-button" href="https://twitter.com/intent/tweet?text=@ViewBag.TwitterTweetText">Tweet</a>
					}
				</div>
			</div>
		</footer>
	</div>

	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/bootstrap")

	@*  Has to go last to initialize stuff  *@

	@Scripts.Render("~/bundles/utilities")

	<script type="text/javascript">
		var appInsights = window.appInsights || function (a) {
			function b(a) { c[a] = function () { var b = arguments; c.queue.push(function () { c[a].apply(c, b) }) } } var c = { config: a }, d = document, e = window; setTimeout(function () { var b = d.createElement("script"); b.src = a.url || "https://az416426.vo.msecnd.net/scripts/a/ai.0.js", d.getElementsByTagName("script")[0].parentNode.appendChild(b) }); try { c.cookie = d.cookie } catch (a) { } c.queue = []; for (var f = ["Event", "Exception", "Metric", "PageView", "Trace", "Dependency"]; f.length;)b("track" + f.pop()); if (b("setAuthenticatedUserContext"), b("clearAuthenticatedUserContext"), b("startTrackEvent"), b("stopTrackEvent"), b("startTrackPage"), b("stopTrackPage"), b("flush"), !a.disableExceptionTracking) { f = "onerror", b("_" + f); var g = e[f]; e[f] = function (a, b, d, e, h) { var i = g && g(a, b, d, e, h); return !0 !== i && c["_" + f](a, b, d, e, h), i } } return c
		}({
			instrumentationKey: "1c8066e4-c2d7-46f5-90cb-0f23064e977d"
		});

		window.appInsights = appInsights, appInsights.queue && 0 === appInsights.queue.length && appInsights.trackPageView();
	</script>

	@RenderSection("scripts", required: false)
</body>
</html>