@model  MoviePicker.WebApp.Models.PicksViewModel

@using MovieMiner;
@using MoviePicker.Common.Interfaces;
@using MoviePicker.WebApp.Models;
@using MoviePicker.WebApp.Utilities;

@{
	ViewBag.Title = "Tracking Estimates";
}

<h2>@ViewBag.Title</h2>

@if (Model.IsTracking)
{
	<div class="row">

		<div class="col-sm-3">
			<h4>FML Perfect Pick (estimated)</h4>
		</div>

		@Html.Partial("MovieList2", Model.MovieListPerfectPick)

		<div class="clearfix"></div>

		<div class="col-lg-4">
			<table class="table table-striped">
				<thead>
					<tr>
						<th>Your Pick</th>
						<th>Estimated</th>
						<th>PP Diff</th>
						<th>PP Diff %</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>Bonus ON</td>
						<td>@string.Format("{0:N0}", Model.MovieList.TotalPicksFromComparison)</td>
						<td>@string.Format("{0:N0}", Model.MovieList.TotalPicksFromComparison - Model.MovieListPerfectPick.Picks.TotalEarnings)</td>
						<td>@string.Format("{0:F2} %", Model.MovieList.Picks.TotalEarnings > 0 ? (Model.MovieList.TotalPicksFromComparison - Model.MovieListPerfectPick.Picks.TotalEarnings) / Model.MovieList.TotalPicksFromComparison * 100 : 0)</td>
					</tr>
					<tr>
						<td>Bonus OFF</td>
						<td>@string.Format("{0:N0}", Model.MovieListBonusOff.TotalPicksFromComparison)</td>
						<td>@string.Format("{0:N0}", Model.MovieListBonusOff.TotalPicksFromComparison - Model.MovieListPerfectPick.Picks.TotalEarnings)</td>
						<td>@string.Format("{0:F2} %", Model.MovieListBonusOff.Picks.TotalEarnings > 0 ? (Model.MovieListBonusOff.TotalPicksFromComparison - Model.MovieListPerfectPick.Picks.TotalEarnings) / Model.MovieListBonusOff.TotalPicksFromComparison * 100 : 0)</td>
					</tr>
				</tbody>
			</table>
		</div>
		<div class="col-lg-4">
			<a class="btn btn-info btn-xs"
			   href="@string.Format("Picks?bo={0}&wl=1,0,0,0,0,0,0", Model.Miners.First().BoxOfficeListCSV)"
			   data-toggle="tooltip"
			   data-placement="bottom"
			   title="">
				<h4>
					Pick using estimates...
				</h4>
			</a>
		</div>
	</div>

	<div class="row">

		<div class="col-sm-6">
			Below is a table that compares your Custom value to the estimates as well as all the other miners.  Were you close?  Were the "experts" close?
			There's still time as these estimates change over the weekend, but typically not by much since the "experts" are pretty good once the data starts rolling in.
			The differences are whether the <strong>Estimated</strong> numbers are higher (+) or lower (-) than <strong>your</strong> numbers.
		</div>
	</div>

	<div class="row-divider"> </div>

	<div class="row">
		<div class="col-xs-12">
			<table class="table table-striped">
				<thead>
					<tr>
						<th style="text-align: center">
							<a class="btn btn-info btn-xs" href="@string.Format("{0}", Model.Miners.FirstOrDefault()?.UrlSource)" data-toggle="tooltip" data-placement="bottom" title="Click for FML BUX source page...">BUX</a>
						</th>
						<th style="text-align: center">Movie</th>
						<th style="text-align: center">
							<a class="btn btn-info btn-xs" href="@string.Format("{0}", Model.Miners.FirstOrDefault()?.UrlSource)" data-toggle="tooltip" data-placement="bottom" title="Click for FML Estimated source page...">Estimated</a>
						</th>
						<th style="text-align: center">Custom / Mine</th>
						<th style="text-align: center">Difference</th>
						<th style="text-align: center">% Diff</th>

						@foreach (var miner in Model.Miners.Skip(2).Where(item => !item.IsHidden))
						{
							<th style="text-align: center">@miner.Abbreviation%</th>
						}
					</tr>
				</thead>
				<tbody>
					@foreach (var movie in Model.Miners.First().Movies)
					{
						var minerCount = 0;
						IMovie fmlMovie = null;
						IMovie customMovie = null;
						var movieIsPickStyle = Model.MovieList.Picks.Movies.Any(item => item.Name == movie.Name) ? "background-color: lightskyblue; " : string.Empty;

						<tr>
							<td style="text-align: right; @movieIsPickStyle">@movie.Cost</td>
							<td style="@movieIsPickStyle">@movie.Name</td>

							@foreach (var miner in Model.Miners.Where(item => !item.IsHidden))
							{
								// The first two miners are FML and Custom (MineMine)

								var minerMovie = miner.Movies?.FirstOrDefault(item => item.Name == movie.Name);

								if (minerCount == 0)
								{
									<td style="text-align: right; @movieIsPickStyle">@string.Format("{0:N0}", minerMovie?.EarningsBase)</td>

									fmlMovie = minerMovie;
								}
								else if (minerCount == 1)
								{
									customMovie = minerMovie;

									<td style="text-align: right; @movieIsPickStyle">@string.Format("{0:N0}", minerMovie?.EarningsBase)</td>

									<td style="text-align: right; @movieIsPickStyle">@string.Format("{0:N0}", fmlMovie.EarningsBase - (customMovie?.EarningsBase ?? 0))</td>

									if (customMovie?.EarningsBase > 0)
									{
										var percent = (fmlMovie.EarningsBase - customMovie.EarningsBase) / customMovie.EarningsBase;
										<td style="@ViewUtility.PercentColor(percent) text-align: right">@string.Format("{0:F2}%", percent * 100)</td>
									}
									else
									{
										<td> </td>
									}
								}
								else
								{
									if (minerMovie?.EarningsBase > 0)
									{
										var percent = (fmlMovie.EarningsBase - minerMovie.EarningsBase) / minerMovie.EarningsBase;
										<td style="@ViewUtility.PercentColor(percent) text-align: right">@string.Format("{0:F2}%", percent * 100)</td>
									}
									else
									{
										<td> </td>
									}
								}

								minerCount++;
							}
						</tr>
					}
				</tbody>
				<tfoot>
					<tr>
						<th></th>
						<th>Average of |%|</th>
						<th></th>
						<th></th>
						<th></th>
						@{
							var estimatedMiner = Model.Miners.FirstOrDefault();

							foreach (var miner in Model.Miners.Skip(1).Where(item => !item.IsHidden))
							{
								var percent = ViewUtility.PercentAwayFromEstimates(estimatedMiner, miner);
								<th style="@ViewUtility.PercentColor(percent ?? 0) text-align: right">@string.Format("{0:F2}%", percent * 100)</th>
							}
						}
					</tr>
				</tfoot>
			</table>
		</div>
	</div>
							}
							else
							{
								<h4>Nothing is tracking at the moment.</h4>
							}