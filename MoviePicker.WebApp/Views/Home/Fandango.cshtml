@model MoviePicker.WebApp.ViewModels.FandangoViewModel

@using MovieMiner;
@using MoviePicker.Common.Interfaces;
@using MoviePicker.WebApp.Utilities;
@using System.Text;

@{
	ViewBag.Title = "Fandango Hourly";

	var weekendEnding = Model.Miner.ContainsEstimates ? MovieDateUtil.GameSunday(isEstimate: Model.Miner.ContainsEstimates).ToShortDateString() : Model.Miner.Movies?.FirstOrDefault()?.WeekendEnding.ToShortDateString();
}

<script type="text/javascript">

	google.charts.load("current", { packages: ["corechart"] });
	google.charts.setOnLoadCallback(drawChart);

	function drawChart() {
		var data = google.visualization.arrayToDataTable([['Movie', 'Ticket Sales'], @Html.Raw(Model.PieGraphData)]);

		var options = {
			title: 'Total Weekend Fandango Ticket Sales',
			is3D: true,
			sliceVisibilityThreshold: 0.04
		};

		var chart = new google.visualization.PieChart(document.getElementById('hourlyPieChart3d'));
		chart.draw(data, options);
	}
</script>

<script type="text/javascript">
	function clickFilter() {
		var pastHours = $("#pastHoursId").val();
		var url = "/Home/Fandango";

		console.log("clickFilter");

		if (pastHours != null) {
			url = url + "?";
		}

		console.log(url);

		if (pastHours != null) {
			url = url + "past=" + pastHours;
		}

		console.log(url);

		var baseUrl = parseBaseUrl();

		window.location.href = baseUrl + url;
	}

	function parseBaseUrl() {
		var baseUrl = window.location.href;

		if (baseUrl != null) {
			var slashIdx = baseUrl.indexOf("/", "https://".length);

			if (slashIdx > 0) {
				baseUrl = baseUrl.substring(0, slashIdx);
			}
		}

		return baseUrl;
	}
</script>

@{
	int movieCount = 1;     // This scope is pretty far, sorry  :(
	var movieList = Model.Movies.ToList();

	<div class="row">

		@* ================================================================================================================================== PICKS COLUMN ==== *@

		<div class="col-md-6 col-md-offset-1">
			<h2>@ViewBag.Title</h2>

			<h5>
				Weekend Ending @weekendEnding (@Model.Duration.ToString("N0") ms)
				<div class="btn btn-info btn-xs" style="font-size: large;" data-toggle="tooltip" data-placement="bottom"
					 title="This page represents the aggregation of Fandango data for the past 24 hours from the file updated by A.K. Valley. The past hours are modifiable using the filter field. The dollars are computed by multiplying the sales by $10 (it's just an average).">
					<span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
				</div>

				@Html.ActionLink("Weekend", "FandangoDays", ViewUtility.RequestParamsToDynamic(Request), new { @class = "btn btn-info btn-sm" })
			</h5>

			<div id="picksColumn">
				@if (Model.MovieListPerfectPick != null)
				{
					@Html.Partial("MovieListMini2", Model.MovieListPerfectPick)
				}

				@if (Model.MovieList != null)
				{
					@Html.Partial("MovieListMini2", Model.MovieList)
				}

				@if (Model.MovieListBonusOff != null)
				{
					@Html.Partial("MovieListMini2", Model.MovieListBonusOff)
				}
			</div>

			<div class="clearfix"></div>
			<div class="row-divider"> </div>

			@* TODO - Put this in a partial view. *@

			<div style="border: solid; border-radius: 4px; border-width: 1px; padding: 8px;">
				<h4>
					Bonus Comparisons
					<div class="btn btn-info btn-xs" style="font-size: large;" data-toggle="tooltip" data-placement="bottom"
						 title="The table below compares ALL of the movies to the MOST efficient one.
								The Difference column is the dollar amount of gain, and the % Difference is just that; Difference divided the actual earnings (percentage gain).
								The MOST efficient movie shows how much it would have to drop to match second place.">
						<span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
					</div>
				</h4>

				@*<div class="col-sm-1 hidden-xs" style="font-weight: bold;">Rank</div>*@
				<div class="col-sm-4 hidden-xs" style="font-weight: bold;">Name</div>
				<div class="col-sm-1 hidden-xs" style="font-weight: bold;">BUX</div>
				<div class="col-sm-2 hidden-xs" style="font-weight: bold; text-align: right;">Earnings</div>
				<div class="col-sm-1 hidden-xs" style="font-weight: bold; text-align: center;">Efficiency</div>
				<div class="col-sm-4 hidden-xs" style="font-weight: bold; text-align: center;">Difference</div>

				@{
					if (movieList.Count > 0)
					{
						var mostEfficient = movieList.OrderByDescending(item => item.Efficiency).FirstOrDefault();

						movieCount = 0;

						foreach (var movie in movieList.OrderByDescending(item => item.Efficiency))
						{
							var backgroundColor = movieCount == 0 ? "background-color: lightgreen;" : (movieCount % 2 == 0 ? "background-color: lightgrey;" : string.Empty);
							var rank = Model.Rank(movie);

							@*<div class="col-sm-1 hidden-xs" style="@backgroundColor text-align: right;">@rank</div>*@
							<div class="col-xs-12 col-sm-4" style="@backgroundColor font-weight: bold;">@movie.Name</div>
							<div class="col-xs-3 hidden-sm hidden-md hidden-lg" style="@backgroundColor font-weight: bold;">BUX:</div>
							<div class="col-xs-3 col-sm-1" style="@backgroundColor text-align: right;">@movie.Cost</div>

							<div class="col-xs-3 hidden-sm hidden-md hidden-lg" style="@backgroundColor font-weight: bold;">Earnings:</div>
							<div class="col-xs-3 col-sm-2" style="@backgroundColor text-align: right;">@string.Format("{0:N0}", movie.Earnings)</div>

							<div class="col-xs-3 hidden-sm hidden-md hidden-lg" style="@backgroundColor font-weight: bold;">Efficiency:</div>
							<div class="col-xs-3 col-sm-1" style="@backgroundColor text-align: right;">@string.Format("{0:N2}", movie.Efficiency / 10m)</div>

							<div class="col-xs-6 hidden-sm hidden-md hidden-lg" style="@backgroundColor">--</div>

							<div class="col-xs-3 hidden-sm hidden-md hidden-lg" style="@backgroundColor font-weight: bold;">Difference:</div>

							if (movie.EarningsBase > 0)
							{
								var nextRankedMovie = movieList.FirstOrDefault(item => Model.Rank(item) == rank + 1);

								// Compute difference columns.

								if (rank == 1)
								{
									if (nextRankedMovie != null)
									{
										//How much does the top rank have to LOSE before it's no longer the TOP
										<div class="col-xs-3 col-sm-2" style="@backgroundColor text-align: right;">@string.Format("{0:N0}", nextRankedMovie.Efficiency * movie.Cost - movie.EarningsBase)</div>
										<div class="col-xs-2 col-sm-1" style="@backgroundColor text-align: right;">--</div>
										<div class="col-xs-2 col-sm-1" style="@backgroundColor text-align: right; color: #cc3333;">@string.Format("{0:N1}%", (nextRankedMovie.Efficiency * movie.Cost - movie.EarningsBase) / movie.EarningsBase * 100)</div>
									}
								}
								else
								{
									//How much does current rank to GAIN to be the TOP

									<div class="col-xs-3 col-sm-2" style="@backgroundColor text-align: right;">@string.Format("{0:N0}", mostEfficient.Efficiency * movie.Cost - movie.EarningsBase)</div>
									<div class="col-xs-2 col-sm-1" style="@backgroundColor text-align: right; color: #33cc33">@string.Format("{0:N1}%", (mostEfficient.Efficiency * movie.Cost - movie.EarningsBase) / movie.EarningsBase * 100)</div>

									if (nextRankedMovie != null)
									{
										<div class="col-xs-2 col-sm-1" style="@backgroundColor text-align: right; color: #cc3333">@string.Format("{0:N1}%", (nextRankedMovie.Efficiency * movie.Cost - movie.EarningsBase) / movie.EarningsBase * 100)</div>
									}
									else
									{
										<div class="col-xs-2 col-sm-1" style="@backgroundColor text-align: right;">--</div>
									}
								}
							}

							movieCount++;

							<div class="clearfix"></div>
						}
					}
				}
			</div>
		</div>

		@* ================================================================================================================================== BOX OFFICE COLUMN ==== *@

		<div class="col-md-4">

			<h2> </h2>

			<a href="@Model.Miner.Url" target="_blank"><strong>File Last Updated: </strong></a>@Model.LastUpdated (Central)

			<div>Filtered to: @Model.FilteredTo</div>

			<div class="input-group col-xs-5 col-sm-5">

				<input id="pastHoursId" class="form-control" placeholder="Past Hours" value="@Request.Params["past"]" />

				<div class="input-group-btn">
					<button class="btn btn-default" type="button" onclick="clickFilter()">Filter</button>
				</div>
			</div>

			<div class="clearfix"></div>
			<div class="row-divider"> </div>

			<table>
				@{
					movieCount = 1;

					while (movieCount <= movieList.Count)
					{
						<tr>
							@for (int col = 0; col < 4 && movieCount <= movieList.Count; col++)
							{
								var movie = movieList[movieCount - 1];

								var boId = string.Format("boId{0}", movieCount);
								var name = string.Format("BoxOffice{0}", movieCount);

								// TODO: May want to use a utility to speed up the reflection.

								var valueString = string.Format("{0:N0}", movie.Earnings);
								string divBackgroundColorStyle = null;
								decimal percent = 0;
								var hasRows = false;

								divBackgroundColorStyle = null;
								percent = 0;

								var backgroundStyle = (Model.Rank(movie) == 1) ? "box-shadow: 2px 4px 8px 0px green;" : "box-shadow: 2px 4px 8px 0px grey";

								<td style="padding: 3px;">

									<div data-toggle="tooltip" data-placement="top"
										 title="@string.Format("{0} - {1:N0} BUX", movie.Name, movie.Cost)">

										<img class="img-responsive img-rounded" style="@backgroundStyle" src="@movie.ImageUrl" />

										@*<div style="position: relative; top: -100px; left: 20px; float: left; background-color: white; padding: 5px">*@
										@*<div style="position: relative; top: -50px; left: 30px; float: left; opacity: 0.75">*@

										<table style="position: relative; top: -50px; left: 2px; float: left;">
											<tr>
												<td>
													<input name="@name"
														   class="form-control"
														   id="@boId"
														   style="width: 100px; opacity: 0.8; box-shadow: inset 0 0 3px #000000"
														   type="text"
														   value="@valueString"
														   data-val-required="The Box Office @movieCount field is required."
														   data-val-number="The field Box Office @movieCount must be a number."
														   data-val="true">
												</td>
											</tr>
										</table>
									</div>
								</td>

								movieCount++;
							}
						</tr>
					}
				}
			</table>
		</div>
	</div>
}

<div id="hourlyPieChart3d" style="width: 900px; height: 700px;"></div>