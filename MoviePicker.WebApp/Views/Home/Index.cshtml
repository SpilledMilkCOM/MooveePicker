@model  MoviePicker.WebApp.Models.IndexViewModel

@{
	ViewBag.Title = "Home Page";
}

<h2>Box Office Forecasts</h2>
<h5>weekend ending @Model.Miners.First().Movies.First().WeekendEnding.ToShortDateString()</h5>

@* Showing the data from ALL of the sources/miners *@

@using (Html.BeginForm("Picks", "Home", null, FormMethod.Post, htmlAttributes: new { @class = "form-horizontal" }))
{
	<table class="table">
		<thead>
			<tr>
				<th style="text-align: center">BUX</th>
				<th style="text-align: center">Movie</th>
				@foreach (var miner in Model.Miners)
				{
					<th style="text-align: center"><a href="@miner.UrlSource">@miner.Abbreviation</a></th>
					<th></th>
				}
			</tr>
			<tr>
				<td></td>
				<td>@Html.ActionLink("Extract", "ExtractToCSV", null, htmlAttributes: new { @class = "btn btn-info btn-sm" })</td>
				@foreach (var miner in Model.Miners)
				{
					<td style="text-align: center">
						@if (miner.Movies?.Count > 0 && miner != Model.Miners.Last())
						{
							<a href="@Model.GetFMLNerdLink(miner)" class="btn btn-info btn-sm">Analyze</a>
						}
					</td>
					<td></td>
				}
			</tr>
		</thead>

		<tbody>
			@foreach (var movie in Model.Miners.First().Movies)
			{
				<tr>
					<td>@movie.Cost</td>
					<td>@movie.Name</td>

					@foreach (var miner in Model.Miners)
					{
						var minerMovie = miner.Movies?.FirstOrDefault(item => item.Name == movie.Name);

						<td style="text-align: right">
							@string.Format("{0:N0}", minerMovie?.Earnings)
						</td>

						if (miner != Model.Miners.Last())
						{
							var lastWeek = Model.Miners.Last().Movies?.FirstOrDefault(item => item.Name == movie.Name);

							<td style="text-align: right">
								@string.Format("{0}", lastWeek != null && minerMovie != null && minerMovie.EarningsBase > 0
														? " " + ((minerMovie.EarningsBase - lastWeek.EarningsBase) / lastWeek.EarningsBase * 100).ToString("N0") + "% "
														: string.Empty)
							</td>
						}
						else
						{
							<td></td>
						}
					}
				</tr>
			}

			<tr>
				<td></td>
				<th>Weights</th>

				@*
					This is pretty brute force to get the values through to the Post.
					TODO: Use reflection to loop through these "flat" properties.
				*@

				<td>
					@Html.TextBoxFor(model => model.Weight1, new { @class = "form-control" })
				</td>
				<td>
					@Html.TextBoxFor(model => model.Weight2, new { @class = "form-control" })
				</td>
				<td>
					@Html.TextBoxFor(model => model.Weight3, new { @class = "form-control" })
				</td>
				<td>
					@Html.TextBoxFor(model => model.Weight4, new { @class = "form-control" })
				</td>
				<td>
					@Html.TextBoxFor(model => model.Weight5, new { @class = "form-control" })
				</td>
				<td>
					@Html.TextBoxFor(model => model.Weight6, new { @class = "form-control" })
				</td>
				<td>
					@Html.TextBoxFor(model => model.Weight7, new { @class = "form-control" })
				</td>
			</tr>
		</tbody>
	</table>

	<input class="btn btn-default" type="submit" value="Picks" />

}