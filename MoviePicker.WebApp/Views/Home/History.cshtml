@model MoviePicker.WebApp.ViewModels.HistoryViewModel

@using MovieMiner;
@using MoviePicker.Common.Interfaces;
@using MoviePicker.WebApp.Utilities;

@{
	ViewBag.Title = "History";

	var count = 0;
	var generatedCode = string.Empty;
}

<script type="text/javascript">

	google.charts.load('current', { packages: ['corechart', 'line'] });
	google.charts.setOnLoadCallback(drawCharts);

	function drawCharts() {

		// Draw all the line graphs.

		@foreach (var movie in Model.Movies)
		{
			// Generate javascript code to draw MANY graphs

			var history = movie.BoxOfficeHistory;

			if (history != null && history.Count() > 1) {
				generatedCode += $"drawChart('chart{count}', '{movie.Name}', {ViewUtility.GraphDataLine(history)});\n\t\t";

				count++;
			}
		}

		@Html.Raw(generatedCode)
	}

	function drawChart(chartId, title, graphData) {
		var data = new google.visualization.DataTable();
		data.addColumn('number', 'X');
		data.addColumn('number', title);

		data.addRows(graphData);

		var options = {
			hAxis: {
				title: 'Weekend'
			},
			vAxis: {
				title: 'Box Office $M'
			},
			colors: ['#a52714']
		};

		var chart = new google.visualization.LineChart(document.getElementById(chartId));
		chart.draw(data, options);
	}

</script>

<h2>
	@ViewBag.Title
	<span class="btn btn-info btn-xs" style="font-size: large;" data-toggle="tooltip" data-placement="bottom"
		  title="The new movies and movies that are only one week old are not shown since they have zero or one point of data.">
		<span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
	</span>
</h2>
<h5>(@Model.Duration.ToString("N0") ms)</h5>

<div class="row">
	@if (Model.Movies != null && Model.Movies.Any())
	{
		count = 0;

		foreach (var movie in Model.Movies)
		{
			const int DATA_COLUMNS = 7;
			IBoxOffice lastWeek = null;
			var history = movie.BoxOfficeHistory;
			var majorRows = history == null ? 0 : history.Count() / DATA_COLUMNS + 1;     // The data can only be a certain width, otherwise it bleeds out of its bounding box.
			var toSkip = 0;
			var toTake = DATA_COLUMNS;

			if (history != null && history.Count() > 1)
			{
				var chartId = $"chart{count}";
				var href = $"{MineBoxOfficeMojo.DEFAULT_URL}{movie.Identifier}";

				count++;

				<div class="col-md-6" style="border: 1px solid black; padding: 5px;">
					<div class="col-xs-2">
						<span data-toggle="tooltip"
							  data-placement="top"
							  title="Click for the source of @movie.Name on Box Office Mojo including similar movies (comps).">
							<a style="color: white;" href="@href">
								<img class="img-responsive img-rounded" src="@movie.ImageUrl" style="box-shadow: 2px 4px 8px 0px grey;" />
							</a>
						</span>
					</div>
					<div class="col-xs-10">
						<div id="@chartId" class="chart-responsive"></div>
					</div>

					<table class="table">
						@while (toSkip < history.Count())
						{
							<thead>
								<tr>
									<td> </td>
									@foreach (var boxOffice in history.Skip(toSkip).Take(toTake))
									{
										<td><strong>@boxOffice.WeekendEnding.ToString("MM/dd")</strong></td>
									}
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>
										<span class="label label-primary"
											  data-toggle="tooltip"
											  data-placement="top"
											  title="Box Office Dollars">BO$</span>
									</td>

									@foreach (var boxOffice in history.Skip(toSkip).Take(toTake))
									{
										<td>$@ViewUtility.SmallDollars(boxOffice.Earnings)</td>
									}
								</tr>
								<tr>
									<td>
										<span class="label label-primary"
											  data-toggle="tooltip"
											  data-placement="top"
											  title="Box Office Percent Decrease/Increase">BO%</span>
									</td>

									@if (toSkip == 0)
									{
										<td> </td>
									}

									@{
										var toTakeOffset = 0;

										if (toSkip == 0)
										{
											lastWeek = history.First();
											toTakeOffset = -1;
										}

										foreach (var boxOffice in history.Skip(toSkip + 1).Take(toTake + toTakeOffset))
										{
											var percent = (boxOffice.Earnings != 0 && lastWeek.Earnings != 0) ? (boxOffice.Earnings - lastWeek.Earnings) / lastWeek.Earnings * 100 : 0;
											var boPercentBackgroundColorStyle = ViewUtility.PercentColorFromLastWeek(percent);

											<td>
												<span class="badge badge-pill badge-dark"
													  style="@boPercentBackgroundColorStyle color: black;">
													@percent.ToString("N0")%
												</span>
											</td>

											lastWeek = boxOffice;
										}

									}
								</tr>
								<tr>
									<td>
										<span class="label label-primary"
											  data-toggle="tooltip"
											  data-placement="top"
											  title="Theater Count">TC</span>
									</td>
									@{
										lastWeek = null;

										foreach (var boxOffice in history.Skip(toSkip).Take(toTake))
										{
											if (boxOffice.TheaterCount > 0)
											{
												var isNew = !(lastWeek != null && (boxOffice.TheaterCount - lastWeek.TheaterCount != 0));

												<td>
													<span class="badge badge-pill badge-light"
														  data-toggle="tooltip"
														  data-placement="top"
														  title="Theater Count">
														@boxOffice.TheaterCount

														@if (!isNew)
														{
															var theaterDiff = boxOffice.TheaterCount - lastWeek.TheaterCount;

															if (theaterDiff > 0)
															{
																<br />
																<span class="glyphicon glyphicon-chevron-up" aria-hidden="true" style="color: lawngreen;"></span>
																@(boxOffice.TheaterCount - lastWeek.TheaterCount)
															}
															else
															{
																<br />
																<span class="glyphicon glyphicon-chevron-down" aria-hidden="true" style="color: red;"></span>
																@(lastWeek.TheaterCount - boxOffice.TheaterCount)
															}
														}
													</span>
												</td>
											}

											lastWeek = boxOffice;
										}
									}
								</tr>
								<tr>
									<td>
										<span class="label label-primary"
											  data-toggle="tooltip"
											  data-placement="top"
											  title="Dollars per Theater">$/T</span>
									</td>

									@foreach (var boxOffice in history.Skip(toSkip).Take(toTake))
									{
										var dollarsPerTheater = boxOffice.TheaterCount != 0 ? (boxOffice.Earnings / boxOffice.TheaterCount).ToString("N0") : "";
										<td>
											$@dollarsPerTheater
										</td>
									}
								</tr>
							</tbody>

							toSkip += toTake;       // Get the next row
						}
					</table>
				</div>

				if (count % 2 == 0)
				{
					<div class="clearfix"></div>
				}
			}
		}
	}
</div>