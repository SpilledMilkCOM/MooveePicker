@model MoviePicker.WebApp.ViewModels.ImagesViewModel

@using MovieMiner
@using MoviePicker.WebApp.Utilities

@{
	ViewBag.Title = "Images";

	var fileCount = 1;
}

<script type="text/javascript">

	// A generic "refresh" function

	function clickFilter() {
		var filterInput = $("#filterInputId").val();
		var sortBy = $("#sortById").val();
		var url = "/LowMem/Images";

		console.log("clickFilter");

		if (filterInput != null || sortBy != null) {
			url = url + "?";
		}

		console.log(url);

		if (filterInput != null) {
			url = url + "filter=" + filterInput;
		}

		console.log(url);

		if (sortBy != null) {

			if (filterInput != null) {
				url = url + "&";
			}

			url = url + "sortBy=" + sortBy;
		}

		console.log(url);

		var baseUrl = parseBaseUrl();

		window.location.href = baseUrl + url;
	}

	function parseBaseUrl() {
		var baseUrl = window.location.href;

		if (baseUrl != null) {
			var slashIdx = baseUrl.indexOf("/", "https://".length);

			if (slashIdx > 0) {
				baseUrl = baseUrl.substring(0, slashIdx);
			}
		}

		return baseUrl;
	}

</script>

<h2>@ViewBag.Title</h2>
<h5>@Model.TotalSize.ToString("N0") (@ViewUtility.BytesToAbbreviation(Model.TotalSize))</h5>

<div class="row">
	<div class="dropdown col-xs-7 col-sm-3 col-md-3">
		<select id="sortById" class="form-control" onchange="clickFilter()">
			<option value="date" @string.Format("{0}", Request.Params["sortBy"] == "date" ? "selected" : string.Empty)>Date</option>
			<option value="name" @string.Format("{0}", Request.Params["sortBy"] == "name" ? "selected" : string.Empty)>Name</option>
			<option value="size" @string.Format("{0}", Request.Params["sortBy"] == "size" ? "selected" : string.Empty)>Size</option>
		</select>
	</div>

	<div class="input-group col-xs-5 col-sm-2 col-md-3">
		<input id="filterInputId" class="form-control" placeholder="Filter (contains)" value="@Request.Params["filter"]" />

		<div class="input-group-btn">
			<button class="btn btn-default" type="button" onclick="clickFilter()">Filter</button>
		</div>
	</div>
</div>

<div class="row-divider"> </div>

<div class="row">
	@foreach (var file in Model.Images)
	{
		<div class="col-sm-4" style="border: solid; border-radius: 4px; border-width: 1px; padding: 8px;">

			<div class="col-xs-3">
				<a href="@file.ImageUrl">
					<img class="img-responsive" src="@file.ImageUrl" alt="@file.Name" style="max-height: 40px;" />
				</a>
			</div>
			<div class="col-xs-2">
				@file.SizeInBytes.ToString("N0")
			</div>
			<div class="col-xs-7">
				@file.CreationDateUTC
			</div>
			<div class="col-xs-12">
				<a href="@file.ImageUrl">
					@file.Name
				</a>
			</div>
		</div>

		if (fileCount % 3 == 0)
		{
			<div class="clearfix"></div>
		}

		fileCount++;
	}
</div>